<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://www.skyve.org/xml/document" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="User" xsi:schemaLocation="http://www.skyve.org/xml/document ../../../schemas/document.xsd">
    <abstract>false</abstract>
    <persistent name="ADM_SecurityUser"/>
    <singularAlias>User</singularAlias>
    <pluralAlias>Users</pluralAlias>
    <audited>true</audited>
    <iconStyleClass>fa fa-user</iconStyleClass>
    <bizKey><![CDATA[return modules.admin.User.UserBizlet.bizKey(this);]]></bizKey>
    <implements>
        <interface>org.skyve.domain.app.admin.User</interface>
    </implements>
    <attributes>
        <text required="true" trackChanges="true" name="userName">
            <documentation><![CDATA[Length is derived from the maximum email address length from RFC 5321]]></documentation>
            <displayName>admin.user.userName.displayName</displayName>
            <length>254</length>
        </text>
        <text trackChanges="true" name="password">
            <displayName>admin.user.password.displayName</displayName>
            <description><![CDATA[admin.user.password.description]]></description>
            <length>100</length>
        </text>
        <text persistent="false" trackChanges="false" usage="view" name="generatedPassword">
            <displayName>admin.user.generatedPassword.displayName</displayName>
            <description><![CDATA[admin.user.generatedPassword.description]]></description>
            <length>255</length>
        </text>
        <dateTime trackChanges="true" name="createdDateTime">
            <displayName>admin.user.createdDateTime.displayName</displayName>
            <description><![CDATA[admin.user.createdDateTime.description]]></description>
        </dateTime>
        <text trackChanges="true" name="homeModule">
            <displayName>admin.user.homeModule.displayName</displayName>
            <description><![CDATA[admin.user.homeModule.description]]></description>
            <domain>variant</domain>
            <length>30</length>
        </text>
        <text persistent="false" trackChanges="true" usage="both" name="newPassword">
            <displayName>admin.user.newPassword.displayName</displayName>
            <description><![CDATA[admin.user.newPassword.description]]></description>
            <length>255</length>
        </text>
        <text persistent="false" trackChanges="true" usage="both" name="confirmPassword">
            <displayName>admin.user.confirmPassword.displayName</displayName>
            <description><![CDATA[admin.user.confirmPassword.description]]></description>
            <length>255</length>
        </text>
        <text trackChanges="true" name="legacyId">
            <displayName>admin.user.legacyId.displayName</displayName>
            <description><![CDATA[admin.user.legacyId.description]]></description>
            <length>100</length>
        </text>
        <boolean trackChanges="true" name="passwordExpired">
            <displayName>admin.user.passwordExpired.displayName</displayName>
            <description><![CDATA[admin.user.passwordExpired.description]]></description>
        </boolean>
        <dateTime trackChanges="true" name="passwordLastChanged">
            <displayName>admin.user.passwordLastChanged.displayName</displayName>
            <description><![CDATA[admin.user.passwordLastChanged.description]]></description>
        </dateTime>
        <text trackChanges="true" name="passwordResetToken">
            <documentation><![CDATA[This contains a token (UUID + time in millis) which when submitted by the user will enable them to reset their password.]]></documentation>
            <displayName>admin.user.passwordResetToken.displayName</displayName>
            <description><![CDATA[admin.user.passwordResetToken.description]]></description>
            <length>56</length>
        </text>
        <memo trackChanges="false" name="passwordHistory">
            <documentation><![CDATA[A tab separated list of previous password hashes used]]></documentation>
            <displayName>admin.user.passwordHistory.displayName</displayName>
            <index>none</index>
        </memo>
        <integer trackChanges="true" name="authenticationFailures">
            <documentation><![CDATA[This value is zeroed on successful authentication.]]></documentation>
            <displayName>admin.user.authenticationFailures.displayName</displayName>
            <description><![CDATA[admin.user.authenticationFailures.description]]></description>
        </integer>
        <timestamp trackChanges="true" name="lastAuthenticationFailure">
            <displayName>admin.user.lastAuthenticationFailure.displayName</displayName>
            <description><![CDATA[admin.user.lastAuthenticationFailure.description]]></description>
        </timestamp>
        <association required="true" type="aggregation" trackChanges="true" name="contact">
            <displayName>admin.user.association.contact.displayName</displayName>
            <description><![CDATA[admin.user.association.contact.description]]></description>
            <documentName>Contact</documentName>
            <queryName>qContacts</queryName>
        </association>
        <association type="aggregation" trackChanges="true" name="dataGroup">
            <displayName>admin.user.association.dataGroup.displayName</displayName>
            <description><![CDATA[admin.user.association.dataGroup.description]]></description>
            <domain>variant</domain>
            <documentName>DataGroup</documentName>
        </association>
        <collection type="aggregation" trackChanges="true" name="groups">
            <displayName>admin.user.collection.groups.displayName</displayName>
            <description><![CDATA[admin.user.collection.groups.description]]></description>
            <domain>variant</domain>
            <documentName>Group</documentName>
            <minCardinality>0</minCardinality>
            <ordering>
                <order sort="ascending" by="name"/>
            </ordering>
            <unique name="UniqueGroupName">
                <message><![CDATA[Membership of group {name} has already been assigned to this user.]]></message>
                <fieldReferences>
                    <ref>bizId</ref>
                </fieldReferences>
            </unique>
        </collection>
        <collection type="child" trackChanges="true" name="roles">
            <displayName>admin.user.collection.roles.displayName</displayName>
            <description><![CDATA[admin.user.collection.roles.description]]></description>
            <documentName>UserRole</documentName>
            <minCardinality>0</minCardinality>
            <ordering>
                <order sort="ascending" by="roleName"/>
            </ordering>
            <unique name="UniqueUserRole">
                <message><![CDATA[The role {roleName} already exists for this user.]]></message>
                <fieldReferences>
                    <ref>roleName</ref>
                </fieldReferences>
            </unique>
        </collection>
        <enum persistent="false" trackChanges="true" usage="view" name="wizardState">
            <displayName>Wizard State</displayName>
            <description><![CDATA[The create user wizard is staged into the following states which roughly follow in order.
			Either an existing contact is confirmed as that of the new user,
			OR
			A new contact is created for the new user.
			Once the identity of the new user is established, the wizard moves on
			to confirm the new user name and password and membership of groups.]]></description>
            <values>
                <value code="confirmContact"/>
                <value code="createContact"/>
                <value code="confirmUserNameAndPassword"/>
                <value code="confirmGroupMemberships"/>
            </values>
        </enum>
        <text persistent="false" trackChanges="true" usage="view" name="searchContactName">
            <displayName>admin.user.searchContactName.displayName</displayName>
            <description><![CDATA[admin.user.searchContactName.description]]></description>
            <length>1024</length>
        </text>
        <text persistent="false" trackChanges="true" usage="view" name="searchEmail">
            <displayName>admin.user.searchEmail.displayName</displayName>
            <description><![CDATA[admin.user.searchEmail.description]]></description>
            <length>512</length>
        </text>
        <collection type="child" persistent="false" trackChanges="true" usage="view" name="candidateContacts">
            <displayName>admin.user.collection.candidateContacts.displayName</displayName>
            <description><![CDATA[admin.user.collection.candidateContacts.description]]></description>
            <documentName>UserCandidateContact</documentName>
            <minCardinality>0</minCardinality>
            <ordering/>
        </collection>
        <boolean persistent="false" trackChanges="false" usage="view" name="contactSelected">
            <displayName>admin.user.contactSelected.displayName</displayName>
            <defaultValue>false</defaultValue>
        </boolean>
        <boolean trackChanges="true" name="inactive">
            <displayName>admin.user.inactive.displayName</displayName>
            <description><![CDATA[admin.user.inactive.description]]></description>
        </boolean>
        <enum persistent="false" trackChanges="false" usage="view" name="groupSelection">
            <displayName>admin.user.groupSelection.displayName</displayName>
            <values>
                <value code="existingGroups" description="Existing groups"/>
                <value code="newGroup" description="New group"/>
            </values>
        </enum>
        <boolean persistent="false" trackChanges="false" usage="view" name="groupsExist">
            <displayName>admin.user.groupsExist.displayName</displayName>
        </boolean>
        <association type="aggregation" persistent="false" trackChanges="false" name="newGroup">
            <displayName>admin.user.association.newGroup.displayName</displayName>
            <documentName>Group</documentName>
        </association>
        <collection type="aggregation" persistent="false" trackChanges="false" usage="view" name="assignedRoles">
            <displayName>admin.user.collection.assignedRoles.displayName</displayName>
            <description><![CDATA[admin.user.collection.assignedRoles.description]]></description>
            <documentName>UserRole</documentName>
            <minCardinality>0</minCardinality>
            <ordering/>
        </collection>
        <boolean trackChanges="true" name="activated">
            <documentation><![CDATA[By default the account will be activated.
			For public users, we want them to activate the account manually so this will be set to false and the activationCode field will be populated.]]></documentation>
            <displayName>admin.user.activated.displayName</displayName>
            <description><![CDATA[admin.user.activated.description]]></description>
            <defaultValue>true</defaultValue>
        </boolean>
        <text trackChanges="true" name="activationCode">
            <documentation><![CDATA[This contains a code which when submitted by the user will activate their account.]]></documentation>
            <displayName>admin.user.activationCode.displayName</displayName>
            <description><![CDATA[admin.user.activationCode.description]]></description>
            <length>36</length>
        </text>
        <dateTime trackChanges="true" name="activationCodeCreationDateTime">
            <displayName>admin.user.activationCodeCreationDateTime.displayName</displayName>
            <description><![CDATA[admin.user.activationCodeCreationDateTime.description]]></description>
        </dateTime>
        <text persistent="false" trackChanges="false" usage="both" name="activateUrl">
            <displayName>Activation Url</displayName>
            <length>2083</length>
        </text>
        <text trackChanges="true" name="twoFactorCode">
            <documentation><![CDATA[this is hashed]]></documentation>
            <displayName>Two Factor Code</displayName>
            <length>100</length>
        </text>
        <timestamp trackChanges="true" name="twoFactorCodeGeneratedTimestamp">
            <documentation><![CDATA[used to invalidate the 2fa code when X amount of time has passed. Not displayed to the user]]></documentation>
            <displayName>2FA Code DateTime</displayName>
        </timestamp>
        <text trackChanges="true" name="twoFactorToken">
            <documentation><![CDATA[Used to identify the user is in the same session for 2FA code entry, this is for the system]]></documentation>
            <displayName>Two Factor Token</displayName>
            <length>100</length>
        </text>
    </attributes>
    <conditions>
        <condition name="confirmContact">
            <description><![CDATA[Confirm Contact step]]></description>
            <expression><![CDATA[WizardState.confirmContact.equals(getWizardState())]]></expression>
        </condition>
        <condition name="createContact">
            <description><![CDATA[Create Contact step]]></description>
            <expression><![CDATA[WizardState.createContact.equals(getWizardState())]]></expression>
        </condition>
        <condition name="confirmUserNameAndPassword">
            <description><![CDATA[Confirm User Name and Password step]]></description>
            <expression><![CDATA[WizardState.confirmUserNameAndPassword.equals(getWizardState())]]></expression>
        </condition>
        <condition name="confirmGroupMemberships">
            <description><![CDATA[Confirm Group Memberships step]]></description>
            <expression><![CDATA[WizardState.confirmGroupMemberships.equals(getWizardState())]]></expression>
        </condition>
        <condition name="showNextButton">
            <description><![CDATA[Show Next Button]]></description>
            <expression><![CDATA[isCreateContact() || isConfirmUserNameAndPassword()]]></expression>
        </condition>
        <condition name="created">
            <description><![CDATA[Created]]></description>
            <expression><![CDATA[isPersisted()]]></expression>
        </condition>
        <condition name="inDataGroup">
            <description><![CDATA[In Data Group]]></description>
            <expression><![CDATA[! isUserInDataGroup(null)]]></expression>
        </condition>
        <condition name="securityAdministrator">
            <description><![CDATA[Security Administrator]]></description>
            <expression><![CDATA[isUserInRole("admin","SecurityAdministrator")]]></expression>
        </condition>
        <condition name="owningUser">
            <description><![CDATA[Whether the current user is this user]]></description>
            <expression><![CDATA[((UserExtension) this).owningUser()]]></expression>
        </condition>
        <condition name="accessDenied">
            <description><![CDATA[Whether the current user is allowed to manage this user's details]]></description>
            <expression><![CDATA[!isOwningUser() && !isSecurityAdministrator()]]></expression>
        </condition>
        <condition name="designer">
            <description><![CDATA[Designer]]></description>
            <expression><![CDATA[isUserInRole("design", "BizHubDesigner")]]></expression>
        </condition>
        <condition name="candidateContactsEmpty">
            <description><![CDATA[Candidate Contacts is empty]]></description>
            <expression><![CDATA[candidateContacts.isEmpty()]]></expression>
        </condition>
        <condition name="showExistingGroups">
            <expression><![CDATA[Boolean.TRUE.equals(groupsExist)]]></expression>
        </condition>
        <condition name="showGroupCreator">
            <expression><![CDATA[GroupSelection.newGroup.equals(groupSelection)]]></expression>
        </condition>
        <condition usage="view" name="selfRegistrationEnabled">
            <description><![CDATA[True when User Self-Registration is enabled.]]></description>
            <expression><![CDATA[org.skyve.impl.util.UtilImpl.ACCOUNT_ALLOW_SELF_REGISTRATION]]></expression>
        </condition>
        <condition usage="view" name="selfRegistrationEnabledAndUserNotActivated">
            <description><![CDATA[True when User Self-Registration is enabled and the User has not been activated.]]></description>
            <expression><![CDATA[isSelfRegistrationEnabled() && Boolean.FALSE.equals(getActivated()) && isSecurityAdministrator()]]></expression>
        </condition>
        <condition usage="view" name="canActivateUser">
            <description><![CDATA[Allows administrators to manually activate users when User Self-Registration is enabled.]]></description>
            <expression><![CDATA[isSecurityAdministrator() && isSelfRegistrationEnabled()]]></expression>
        </condition>
    </conditions>
    <uniqueConstraints>
        <constraint scope="customer" name="UniqueUserName">
            <message><![CDATA[The user {userName} already exists.]]></message>
            <fieldReferences>
                <ref>userName</ref>
            </fieldReferences>
        </constraint>
    </uniqueConstraints>
</document>