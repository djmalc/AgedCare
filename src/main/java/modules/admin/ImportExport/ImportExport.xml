<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://www.skyve.org/xml/document" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="ImportExport" xsi:schemaLocation="http://www.skyve.org/xml/document ../../../schemas/document.xsd">
    <abstract>false</abstract>
    <persistent name="ADM_ImportExport"/>
    <singularAlias>Import Export</singularAlias>
    <pluralAlias>Imports Exports</pluralAlias>
    <audited>true</audited>
    <iconStyleClass>fa fa-cloud-upload</iconStyleClass>
    <bizKey expression="{moduleName}.{documentName}"/>
    <attributes>
        <enum required="true" trackChanges="true" name="mode">
            <displayName>admin.importExport.mode.displayName</displayName>
            <defaultValue>importData</defaultValue>
            <values>
                <value code="importData" description="Import Data"/>
                <value code="exportData" description="Export Data"/>
            </values>
        </enum>
        <text required="true" trackChanges="true" name="moduleName">
            <displayName>admin.importExport.moduleName.displayName</displayName>
            <domain>constant</domain>
            <length>100</length>
        </text>
        <text required="true" trackChanges="true" name="documentName">
            <displayName>admin.importExport.documentName.displayName</displayName>
            <domain>dynamic</domain>
            <length>500</length>
        </text>
        <text trackChanges="true" name="importFileAbsolutePath">
            <displayName>admin.importExport.importFileAbsolutePath.displayName</displayName>
            <length>500</length>
        </text>
        <text trackChanges="true" name="importFileName">
            <displayName>admin.importExport.importFileName.displayName</displayName>
            <length>200</length>
        </text>
        <text trackChanges="true" name="exportFileAbsolutePath">
            <displayName>admin.importExport.exportFileAbsolutePath.displayName</displayName>
            <length>500</length>
        </text>
        <memo persistent="false" trackChanges="false" name="results">
            <displayName>admin.importExport.results.displayName</displayName>
        </memo>
        <boolean deprecated="true" trackChanges="true" name="advancedMode">
            <displayName>admin.importExport.advancedMode.displayName</displayName>
        </boolean>
        <boolean deprecated="true" trackChanges="true" name="columnTitlesOnly">
            <displayName>admin.importExport.columnTitlesOnly.displayName</displayName>
        </boolean>
        <boolean trackChanges="true" name="fileContainsHeaders">
            <displayName>admin.importExport.fileContainsHeaders.displayName</displayName>
            <defaultValue>true</defaultValue>
        </boolean>
        <boolean trackChanges="true" name="detailedLogging">
            <displayName>admin.importExport.detailedLogging.displayName</displayName>
            <description><![CDATA[admin.importExport.detailedLogging.description]]></description>
            <defaultValue>true</defaultValue>
        </boolean>
        <collection type="child" ordered="true" trackChanges="true" name="importExportColumns">
            <displayName>admin.importExport.collection.importExportColumns.displayName</displayName>
            <documentName>ImportExportColumn</documentName>
            <minCardinality>0</minCardinality>
            <ordering/>
        </collection>
        <enum trackChanges="true" name="rollbackErrors">
            <displayName>admin.importExport.rollbackErrors.displayName</displayName>
            <defaultValue>rollbackErrors</defaultValue>
            <values>
                <value name="rollbackErrors" code="rollbackErrors" description="admin.importExport.rollbackErrors.rollbackErrors.description"/>
                <value name="noRollbackErrors" code="noRollbackErrors" description="admin.importExport.rollbackErrors.noRollbackErrors.description"/>
            </values>
        </enum>
        <enum trackChanges="true" name="loadType">
            <displayName>admin.importExport.loadType.displayName</displayName>
            <description><![CDATA[admin.importExport.loadType.description]]></description>
            <defaultValue>createFind</defaultValue>
            <values>
                <value name="createFind" code="createFind" description="admin.importExport.loadType.createFind.description"/>
                <value name="createAll" code="createAll" description="admin.importExport.loadType.createAll.description"/>
            </values>
        </enum>
    </attributes>
    <conditions>
        <condition name="showExport">
            <description><![CDATA[Whether to show the export mode view rather than the default import]]></description>
            <expression><![CDATA[Mode.exportData.equals(mode)]]></expression>
        </condition>
        <condition name="fileExists">
            <description><![CDATA[Whether the upload file exists]]></description>
            <expression><![CDATA[Mode.importData.equals(mode) && importFileAbsolutePath!=null]]></expression>
        </condition>
        <condition name="showUpload">
            <description><![CDATA[Whether to show the upload button]]></description>
            <expression><![CDATA[!isShowExport() && !isFileExists()]]></expression>
        </condition>
        <condition name="showUploadColumns">
            <description><![CDATA[Whether to show the upload columns]]></description>
            <expression><![CDATA[!isShowExport() && isFileExists()]]></expression>
        </condition>
        <condition name="showExpressions">
            <description><![CDATA[Whether to show advanced binding strings]]></description>
            <expression><![CDATA[((ImportExportExtension) this).anyColumnHasExpression()]]></expression>
        </condition>
        <condition name="showResults">
            <expression><![CDATA[results!=null]]></expression>
        </condition>
        <condition name="contextSet">
            <expression><![CDATA[getModuleName()!=null && getDocumentName()!=null]]></expression>
        </condition>
        <condition name="loadTypeCreateFind">
            <description><![CDATA[The load type  - whether to normalise the input or create all records]]></description>
            <expression><![CDATA[!isShowExport()
				&& LoadType.createFind.equals(loadType)]]></expression>
        </condition>
    </conditions>
</document>