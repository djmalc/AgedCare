<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://www.skyve.org/xml/document" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="ReportDataset" xsi:schemaLocation="http://www.skyve.org/xml/document ../../../schemas/document.xsd">
    <documentation><![CDATA[Report Dataset is used to capture data which is injected into a report template. This 
		can be a BizQL or SQL query, or a string constant.]]></documentation>
    <abstract>false</abstract>
    <persistent name="ADM_ReportDataset"/>
    <singularAlias>Report Dataset</singularAlias>
    <pluralAlias>Report Datasets</pluralAlias>
    <audited>true</audited>
    <iconStyleClass>fa fa-table</iconStyleClass>
    <parentDocument databaseIndex="true">ReportTemplate</parentDocument>
    <bizKey expression="Query - {parent.name} {datasetType}"/>
    <implements>
        <interface>org.skyve.domain.app.admin.ReportDataset</interface>
    </implements>
    <attributes>
        <text required="true" trackChanges="true" name="datasetName">
            <displayName>Dataset Name</displayName>
            <description><![CDATA[The name this dataset will be made available to within the report definition.]]></description>
            <length>50</length>
        </text>
        <enum required="true" trackChanges="true" name="datasetType">
            <displayName>Dataset Type</displayName>
            <description><![CDATA[The type of this dataset; if it is a BizQL or SQL query, a fixed constant value or a dataset Class.]]></description>
            <defaultValue>bizQL</defaultValue>
            <values/>
        </enum>
        <memo required="true" trackChanges="true" name="query">
            <displayName>Query</displayName>
            <description><![CDATA[The query to retrieve this dataset for the report.]]></description>
            <index>none</index>
        </memo>
        <memo persistent="false" trackChanges="false" usage="view" name="results">
            <displayName>Query Results</displayName>
            <description><![CDATA[Results of testing the query.]]></description>
            <index>none</index>
        </memo>
    </attributes>
    <conditions>
        <condition usage="view" name="typeClass">
            <description><![CDATA[True when the dataset type is a class, used to hide the results ouput]]></description>
            <expression><![CDATA[DatasetType.classValue == getDatasetType()]]></expression>
        </condition>
        <condition usage="view" name="typeConstant">
            <description><![CDATA[True when the dataset type is a constant, used to hide the parameters datagrid]]></description>
            <expression><![CDATA[DatasetType.constant == getDatasetType()]]></expression>
        </condition>
        <condition usage="view" name="typeQuery">
            <description><![CDATA[True when the dataset type is a BizQL or SQL, used to show the parameters datagrid]]></description>
            <expression><![CDATA[DatasetType.bizQL == getDatasetType() || DatasetType.SQL == getDatasetType()]]></expression>
        </condition>
        <condition usage="view" name="typeSqlQuery">
            <description><![CDATA[True when the dataset type is SQL, used to show help to the user]]></description>
            <expression><![CDATA[DatasetType.SQL == getDatasetType()]]></expression>
        </condition>
    </conditions>
    <uniqueConstraints>
        <constraint scope="customer" name="UniqueDatasetName">
            <message><![CDATA[The dataset {datasetName} already exists for template {parent.name}.]]></message>
            <fieldReferences>
                <ref>datasetName</ref>
                <ref>parent</ref>
            </fieldReferences>
        </constraint>
    </uniqueConstraints>
</document>